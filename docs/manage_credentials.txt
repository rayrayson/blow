Manage user and security credentials
====================================

User credentials are required to launch and to connect remote instance(s).

Amazon EC2 uses an asymmetric key authentication mechanism. In this scheme the key is composed by two parts,
a public part and a private a part. For this reason it is named a `key pair`.

There are different ways to create a `key pair`. You can do it using the `Linux` command ``ssh-keygen``,
but in the context of the cloud more commonly you are required to use the commands provided by the cloud provider.

In this case we say that the key pair is `managed`, since when you create a new `key pair` what happen is that you will
download and have to store in safe place the private part of the key, while the public part of the `key pair` is retained by
cloud provider, which will install it in the instance(s) when needed.


Summarizing the authentication mechanism is made up of the following parts:

  * User name: The user name used to logon on remote instance
  * Key pair name: A friendly name for specific asymmetric key pair
  * Public key file: The public part of the asymmetric key kept by the cloud provider and installed in to a running instance
  * Private key file: The private part of the key pair, given by the provider when creating a new key pair.


`Blow` needs these information to be able to launch and to connect the remote instances and it provides a very flexible
configuration mechanism that can adapted to different scenarios and user requirements.


Zero configuration
------------------

This the simplest approach and does not require you to provide any of the above information.

`Blow` will automatically create a new user account in any launched instance, named as your current local user.

Moreover will install any local `key pair` available in the current directory and, alternatively, in the ``$HOME/.ssh/`` directory
(it will take in consideration only key files named ``id_rsa`` - ``id_rsa.pub`` or ``id_dsa`` - ``id_dsa.pub``).

If none of them are available, `Blow` will generate a new key pair files in the current directory, naming these files as
``id_rsa`` - ``id_rsa.pub``.


Specify the user credentials
----------------------------

Although the above approach it the simplest quickest way, it may not work in some circumstances because, for example,
the AMI you are using does not allow to install a new user.

So the most common scenario is that you want to use an existing `managed` key pair along with the user account as defined by
cloud provider.

Using `Blow` you can do that specifying the following attributes in the configuration file::

  user-name: <the-instance-default-account>
  key-pair: <your-key-pair>
  private-key: /path/to/your-key-pair.pem


Where ``<the-instance-default-account>`` represent the logon user name as defined by the cloud provider.
Using the Amazon EC2 service most of the time this value is ``ec2-user`` but it may differ depending which AMI you are launching.

The ``<your-key-pair>`` value is the name of a ``managed`` key pair you have created using the Amazon CLI tools or the Amazon dashboard.
See the following link for more details http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/generating-a-keypair.html

Finally ``/path/to/your-key-pair.pem`` represent the path to the file on your machine where you stored the private
key the provider made you download during the key pair creation process, as explained in the step above.


Advanced credentials configuration
----------------------------------

Use a local key pair with a custom defined user logon name::

  user-name: <custom-user-name>
  private-key: /path/to/the/private-key.file
  public-key: /path/to/teh/public-key.file
  create-user: true


In the above example a custom user name is configured as logon account in the launched instance(s).

Note in this case you need to use a `non-managed` key pair, that you need to create with the `Linux` command ``ssh-keygen`` .

Since the public part of the key pair needs to be installed in the remote instances, it must be specified explicitly in the
configuration file along with the private key.

